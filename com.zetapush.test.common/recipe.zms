/**
 * ZetaPush Official Test Recipe
 */
recipe com.zetapush.test.common 1.0.0 includes 'ftl';

// Import recipes

import recipe com.zetapush.test.core 1.0.0 in zpRecipeTestCore;

// Constants

const TEMPLATE_MEMORY = #TEMPLATE_MEMORY;
const TEMPLATE_TITLE = #TEMPLATE_TITLE;
const TEMPLATE_RECURSION = #TEMPLATE_RECURSION;

// Errors Codes

const ERROR_INVALID_TEMPLATE_EVALUATION = #ERROR_INVALID_TEMPLATE_EVALUATION;

// Services declaration

/**
 * Public API (Client and Server side) macro service
 */
service zpServiceApiMacro = macro(__default) for 'src/public';
/**
 * Private API (Server side only) macro service
 */
service zpServiceImplMacro = macro(zpRecipeTestCore::SERVICE_MACRO_IMPL_ID).forbiddenVerbs(__all) for 'src/private';
/**
 * Weak Authentification service
 */
service zpServiceWeakAuth = weak(__default).forbiddenVerbs(__all);
/**
 * Simple Authentification service for Users
 */
service zpServiceSimpleAuth = simple(__default).options({
	simpleauth_mandatoryFields: @config.authentication.simple.mandatory_fields,
	simpleauth_publicFields: @config.authentication.simple.public_fields
}).forbiddenVerbs(__all);
/**
 * Template service
 */
service zpServiceTemplate = template(__default).forbiddenVerbs(__all);
/**
 * File system service
 */
service zpServiceFileSystem = zpfs_hdfs(__default).options({
	upload_thumbnails: '100,200'
}).forbiddenVerbs(__all);
/**
 * Elastic search service
 */
service zpServiceElastic = search(__default).forbiddenVerbs(__all);


/**
* Data stack service
*/
service zpServiceStack = stack(__default).forbiddenVerbs(__all);


/**
* Groups management service
*/
service zpServiceGroups = groups(__default).forbiddenVerbs(__all);

/**
* Trigger service
*/
service zpServiceTrigger = trigger(__default).forbiddenVerbs(__all);
